
#ifndef _GIMBLE_SAMPLER_
#define _GIMBLE_SAMPLER_

#include "GimbleReqs.h"
#include "Graphics/GimbleComparisonFunc.h"

namespace Gimble
{
	namespace Graphics
	{
		class GIMBLE_API Sampler
		{
		public:
			enum Filter
			{
				FILTER_MIN_MAG_MIP_POINT,
				FILTER_MIN_MAG_POINT_MIP_LINEAR,
				FILTER_MIN_POINT_MAG_LINEAR_MIP_POINT,
				FILTER_MIN_POINT_MAG_MIP_LINEAR,
				FILTER_MIN_LINEAR_MAG_MIP_POINT,
				FILTER_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
				FILTER_MIN_MAG_LINEAR_MIP_POINT,
				FILTER_MIN_MAG_MIP_LINEAR,
				FILTER_ANISOTROPIC,
				FILTER_COMPARISON_MIN_MAG_MIP_POINT,
				FILTER_COMPARISON_MIN_MAG_POINT_MIP_LINEAR,
				FILTER_COMPARISON_MIN_POINT_MAG_LINEAR_MIP_POINT,
				FILTER_COMPARISON_MIN_POINT_MAG_MIP_LINEAR,
				FILTER_COMPARISON_MIN_LINEAR_MAG_MIP_POINT,
				FILTER_COMPARISON_MIN_LINEAR_MAG_POINT_MIP_LINEAR,
				FILTER_COMPARISON_MIN_MAG_LINEAR_MIP_POINT,
				FILTER_COMPARISON_MIN_MAG_MIP_LINEAR,
				FILTER_COMPARISON_ANISOTROPIC
			};

			enum AddressMode
			{
				ADDRESS_WRAP,
				ADDRESS_MIRROR,
				ADDRESS_CLAMP,
				ADDRESS_BORDER,
				ADDRESS_MIRROR_ONCE
			};

		protected:
			Sampler() { }
		};
	}
}

#endif